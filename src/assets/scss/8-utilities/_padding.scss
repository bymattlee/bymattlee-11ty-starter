/* ***** ----------------------------------------------- ***** **
** ***** Utilities/Padding
** ***** ----------------------------------------------- ***** */


@mixin padding-items($size, $breakpoint-suffix: "") {

	$size-value: ($size / 10) * 1rem;

	.u-pad_a_#{$size}#{$breakpoint-suffix} { padding: $size-value; }
	.u-pad_t_#{$size}#{$breakpoint-suffix} { padding-top: $size-value; }
	.u-pad_r_#{$size}#{$breakpoint-suffix} { padding-right: $size-value; }
	.u-pad_b_#{$size}#{$breakpoint-suffix} { padding-bottom: $size-value; }
	.u-pad_l_#{$size}#{$breakpoint-suffix} { padding-left: $size-value; }

	.u-pad_x_#{$size}#{$breakpoint-suffix} {
		padding-bottom: $size-value;
		padding-top: $size-value;
	}

	.u-pad_y_#{$size}#{$breakpoint-suffix} {
		padding-left: $size-value;
		padding-right: $size-value;
	}

}

// Print initial padding item classes
$padding-steps: 10;

@for $padding-step from 0 through $padding-steps {

	$size: $padding-step * 5;

	@include padding-items($size);

}

// Print padding item classes for each breakpoint
@each $key, $value in $breakpoints {
	@include mq(map_get(map_get($breakpoints, $key), size)) {
		@for $padding-step from 0 through $padding-steps {

			$size: $padding-step * 5;

			@include padding-items($size, "-" + map_get(map_get($breakpoints, $key), abbr));

		}
	}
}
